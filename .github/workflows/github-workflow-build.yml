name: Build and Push API Image

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
  pull_request:
    branches: [main]
    paths:
      - 'api/**'
  workflow_dispatch:
  workflow_run:
    workflows: ["Deploy Infrastructure"]
    types:
      - completed
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'failure' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-2

      - name: Download Terraform Outputs
        uses: actions/download-artifact@v4
        with:
          name: terraform-outputs
          path: .
        continue-on-error: true

      - name: Load Terraform Outputs
        id: terraform-outputs
        run: |
          if [ -f terraform-outputs.env ]; then
            cat terraform-outputs.env >> $GITHUB_ENV
          else
            # If we don't have the artifact, try to get it from Terraform directly
            cd terraform
            terraform init -input=false
            echo "ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV
            echo "CLUSTER_REGION=$(terraform output -raw region)" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ECR_REPOSITORY_URL }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Image Digest
        if: github.event_name != 'pull_request'
        run: |
          echo "IMAGE_DIGEST=${{ steps.meta.outputs.digest }}" >> $GITHUB_ENV
          echo "IMAGE_TAGS=$(echo '${{ steps.meta.outputs.tags }}' | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Save Image Info to Artifacts
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: image-info
          path: |
            echo "IMAGE_DIGEST=${{ env.IMAGE_DIGEST }}" > image-info.env
            echo "IMAGE_TAGS=${{ env.IMAGE_TAGS }}" >> image-info.env
            echo "ECR_REPOSITORY_URL=${{ env.ECR_REPOSITORY_URL }}" >> image-info.env
          retention-days: 1
